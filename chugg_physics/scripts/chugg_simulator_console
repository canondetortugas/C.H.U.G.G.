#!/usr/bin/env python

import rospy
import numpy as np

from geometry_msgs.msg import Vector3

from IPython import embed
from chugg_physics.ROSChuggSimulator import ROSChuggSimulator


if __name__=='__main__':
    rospy.init_node('chugg_simulator')

    sim = ROSChuggSimulator()

    def wheelAccCallback(msg):
        sim.setWheelAcc(np.array((msg.x, msg.y, msg.z)))

    acc_sub = rospy.Subscriber('chugg/target_acc', Vector3, wheelAccCallback)

    def setWheelAcc(acc):
        sim.setWheelAcc(acc)
    # def setWheelTorque(torque):
    #     sim.setWheelTorque(torque)
    def setExternalTorque(torque):
        sim.setExternalTorque(torque)
    def setState(*args, **kwargs):
        sim.setState(*args, **kwargs)
    def resetState():
        sim.setState()
    def spinWheelsToVel(*args, **kwargs):
        sim.spinWheelsToVel(*args, **kwargs)
    def stepWheelVelocity(*args, **kwargs):
        sim.stepWheelVelocity(*args, **kwargs)

    embed()
    rospy.signal_shutdown('')
